// A test suite for tautologies. Each line is a tautology.

tautos = {
  intuitionistic: [
    'true',
    'false -> false',
    'false -> A',
    '(true -> false) -> false',
    'A -> ((A -> false) -> false)',
    'A -> A',
    'A -> A -> A',
    'A -> B -> A',
    'A -> B -> C -> D -> E -> C',
    'A -> B -> (A and B)',
    'A -> B -> (B and A)',
    'A -> (A and A)',
    '(A and B) -> A',
    '(A and B) -> B',
    '(A and B) -> (B and A)',
    '(A and B and C and D) -> (C and A and A and A)',
    'A -> (A -> B) -> B',
    '((A -> B) and A) -> B',
    '((A -> B) and (B -> C)) -> (A -> C)',
    '(((A and B) -> C) and (A -> B) and A) -> (A and B and C)',
    '(((A -> false) -> false) -> false) -> (A -> false)',
    'A -> (A and true)',
    '(A and true) -> A',
    'true and true and true and true and true',
    'A -> (A or B)',
    'B -> (A or B)',
    'C -> (A or B or C or D or E)',
    '(A or B) -> (B or A)',
    '(A or B) -> (B -> C) -> (A -> C) -> C',
    '(A or B) -> (A -> X) -> (B -> Y) -> (Y or X)',
    '(A or B or C or D) -> ((D or A) or (C or B))',
    '(A and (B or C)) -> (C or A)',
    '(A and (B or C)) -> ((A and B) or (A and C))',
    '(A or (B and C)) -> ((A or B) and (A or C))',
    '(A and X) -> (A -> B) -> (B and X)',
    '(A or X) -> (A -> B) -> (B or X)',
    '(X -> A) -> (A -> B) -> (X -> B)',
    '(B -> X) -> (A -> B) -> (A -> X)',
    '((A and X) or (Y and Z)) -> (A -> B) -> ((B and X) or (Y and Z))',
    '(A -> B -> C) -> ((A and B) -> C)',
    '((A and B) -> C) -> (A -> B -> C)',
    '(A -> A -> B) -> (A -> B)',
    '(((A -> false) or A) -> false) -> false',
    'A -> (false or A)',
    '(false or A) -> A',
    '(A -> false) -> (A -> B)',
    'A = A',
    'true = true',
    'false = false',
    '(A = A) = true',
    '(A = B) -> (A -> B)',
    '(A = B) -> (B -> A)',
    '((A = B) and (B = C) and (C = D)) -> A = D',
    '((A -> B) and (B -> C) and (C -> A)) -> ((A = B) and (A = C))',
    '(A -> false) = (A = false)',
    'A = (A = true)',
    '(A and (B and C)) = ((A and B) and C)',
    '(A or (B or C)) = ((A or B) or C)',
  ],
  classical: [
    '((A -> B) -> A) -> A',
    'A or (A -> false)',
    '((A -> false) -> false) -> A',
    '(A -> B) -> ((A -> false) or B)',
    '((A -> false) or B) -> (A -> B)',
    '(A = true) or (A = false)',
    '(A -> B) or (B -> A)',
    '(A = B) or (B = C) or (C = A)',
    '((A = B) = C) = (A = (B = C))',
  ],
};

// parse each stmt.

