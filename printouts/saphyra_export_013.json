{
  "currentTab": "tautology_2",
  "highlighted": [],
  "tabs": [
    [
      "empty",
      [
        5,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[exists [: _x:O [= _x:O [S O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[exists [: _x:O [= _x:O [S O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= _x:O [S O]]] [S O]]] [[exists [: _x:O [= _x:O [S O]]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= _x:O [S O]]]]]]]",
        "[node #root [] [[exists [: _x:O [= _x:O [S O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= _x:O [S O]]] [S O]]] [[exists [: _x:O [= _x:O [S O]]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= _x:O [S O]]]]] [node #0.3261161212069631 [[= [S O] [S O]]] [[[: _x:O [= _x:O [S O]]] [S O]]] [beta-equiv] [] []] [link #0.3261161212069631 #0 [[: _x:O [= _x:O [S O]]] [S O]]]]]",
        "[node #root [] [[exists [: _x:O [= _x:O [S O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= _x:O [S O]]] [S O]]] [[exists [: _x:O [= _x:O [S O]]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= _x:O [S O]]]]] [node #0.3261161212069631 [[= [S O] [S O]]] [[[: _x:O [= _x:O [S O]]] [S O]]] [beta-equiv] [] []] [link #0.3261161212069631 #0 [[: _x:O [= _x:O [S O]]] [S O]]] [node #1 [] [[= [S O] [S O]]] =-intro []] [link #1 #0.3261161212069631 [= [S O] [S O]]]]]"
      ]
    ],
    [
      "incomplete",
      [
        7,
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] []]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] [[node #0.7509452092874899 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [impl-intro] [[node #0 [_A:P _B:P] [[and [and _A:P _A:P] _B:P]] [join] []]]] [link ^a #0.7509452092874899 _A:P] [link #0.7509452092874899 ^c [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] [[node #0.7509452092874899 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [impl-intro] [[node #0 [_A:P _B:P] [[and [and _A:P _A:P] _B:P]] [join] [[node #1 [[and _A:P _A:P] _B:P] [[and [and _A:P _A:P] _B:P]] and-intro []] [link #1 ^c [and [and _A:P _A:P] _B:P]]]]]] [link ^a #0.7509452092874899 _A:P] [link #0.7509452092874899 ^c [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] [[node #0.7509452092874899 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [impl-intro] [[node #0 [_A:P _B:P] [[and [and _A:P _A:P] _B:P]] [join] [[node #1 [[and _A:P _A:P] _B:P] [[and [and _A:P _A:P] _B:P]] and-intro []] [link #1 ^c [and [and _A:P _A:P] _B:P]] [node #2 [_A:P _A:P] [[and _A:P _A:P]] and-intro []] [link #2 #1 [and _A:P _A:P]]]]]] [link ^a #0.7509452092874899 _A:P] [link #0.7509452092874899 ^c [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] [[node #0.7509452092874899 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [impl-intro] [[node #0 [_A:P _B:P] [[and [and _A:P _A:P] _B:P]] [join] [[node #1 [[and _A:P _A:P] _B:P] [[and [and _A:P _A:P] _B:P]] and-intro []] [link #1 ^c [and [and _A:P _A:P] _B:P]] [node #2 [_A:P _A:P] [[and _A:P _A:P]] and-intro []] [link #2 #1 [and _A:P _A:P]] [node #3 [_A:P] [_A:P] id []] [link ^a #3 _A:P] [link #3 #2 _A:P]]]]] [link ^a #0.7509452092874899 _A:P] [link #0.7509452092874899 ^c [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]",
        "[node #root [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [join] [[comment Try proving this statement with the <impl-intro> or <tauto> tactics.] [node #0.8136114049570923 [] [[-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]] [impl-intro] [[node #0 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [join] [[node #0.7509452092874899 [_A:P] [[-> _B:P [and [and _A:P _A:P] _B:P]]] [impl-intro] [[node #0 [_A:P _B:P] [[and [and _A:P _A:P] _B:P]] [join] [[node #1 [[and _A:P _A:P] _B:P] [[and [and _A:P _A:P] _B:P]] and-intro []] [link #1 ^c [and [and _A:P _A:P] _B:P]] [node #2 [_A:P _A:P] [[and _A:P _A:P]] and-intro []] [link #2 #1 [and _A:P _A:P]] [node #3 [_A:P] [_A:P] id []] [link ^a #3 _A:P] [link #3 #2 _A:P] [node #4 [_B:P] [_B:P] id []] [link ^a #4 _B:P] [link #4 #1 _B:P]]]]] [link ^a #0.7509452092874899 _A:P] [link #0.7509452092874899 ^c [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]] [link #0.8136114049570923 ^c [-> _A:P [-> _B:P [and [and _A:P _A:P] _B:P]]]]]]"
      ]
    ],
    [
      "simple",
      [
        4,
        "[node #root [_A:P _C:P _E:P] [[and [or _A:P _E:P] [or _B:P _C:P]]] [join] [[comment Try proving this statement with tactics.]]]",
        "[node #root [_A:P _C:P _E:P] [[and [or _A:P _E:P] [or _B:P _C:P]]] [join] [[comment Try proving this statement with tactics.] [node #0 [[or _A:P _E:P] [or _B:P _C:P]] [[and [or _A:P _E:P] [or _B:P _C:P]]] and-intro []] [link #0 ^c [and [or _A:P _E:P] [or _B:P _C:P]]]]]",
        "[node #root [_A:P _C:P _E:P] [[and [or _A:P _E:P] [or _B:P _C:P]]] [join] [[comment Try proving this statement with tactics.] [node #0 [[or _A:P _E:P] [or _B:P _C:P]] [[and [or _A:P _E:P] [or _B:P _C:P]]] and-intro []] [link #0 ^c [and [or _A:P _E:P] [or _B:P _C:P]]] [node #1 [_A:P] [[or _A:P _E:P]] or-intro-1 []] [link ^a #1 _A:P] [link #1 #0 [or _A:P _E:P]]]]",
        "[node #root [_A:P _C:P _E:P] [[and [or _A:P _E:P] [or _B:P _C:P]]] [join] [[comment Try proving this statement with tactics.] [node #0 [[or _A:P _E:P] [or _B:P _C:P]] [[and [or _A:P _E:P] [or _B:P _C:P]]] and-intro []] [link #0 ^c [and [or _A:P _E:P] [or _B:P _C:P]]] [node #1 [_A:P] [[or _A:P _E:P]] or-intro-1 []] [link ^a #1 _A:P] [link #1 #0 [or _A:P _E:P]] [node #2 [_C:P] [[or _B:P _C:P]] or-intro-2 []] [link ^a #2 _C:P] [link #2 #0 [or _B:P _C:P]]]]"
      ]
    ],
    [
      "plus_zero",
      [
        3,
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is a proof of the theorem: forall x, x = x + 0.] [node #2 [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #1 [] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [join] [[node #3 [] [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [beta] []] [node #4 [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [=-sym] []] [node #5 [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [= _v0:O [+ _v0:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [equiv-elim] []] [link #3 #4 [= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [link #4 #5 [= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [link #5 ^c [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [node #6 [[= [+ _v0:O O] _v0:O]] [[= _v0:O [+ _v0:O O]]] [=-sym] []] [link #6 #5 [= _v0:O [+ _v0:O O]]] [node #7 [] [[= [+ _v0:O O] _v0:O]] [+-O] []] [link #7 #6 [= [+ _v0:O O] _v0:O]]]]]] [link #2 ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is a proof of the theorem: forall x, x = x + 0.] [node #abc [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #1 [] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [join] [[node #3 [] [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [beta] []] [node #4 [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [=-sym] []] [node #5 [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [= _v0:O [+ _v0:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [equiv-elim] []] [link #3 #4 [= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [link #4 #5 [= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [link #5 ^c [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [node #6 [[= [+ _v0:O O] _v0:O]] [[= _v0:O [+ _v0:O O]]] [=-sym] []] [link #6 #5 [= _v0:O [+ _v0:O O]]] [node #7 [] [[= [+ _v0:O O] _v0:O]] [+-O] []] [link #7 #6 [= [+ _v0:O O] _v0:O]]]]]] [link #abc ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is a proof of the theorem: forall x, x = x + 0.] [node #abc [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #def [] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [join] [[node #3 [] [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [beta] []] [node #4 [[= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [=-sym] []] [node #5 [[= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [= _v0:O [+ _v0:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [equiv-elim] []] [link #3 #4 [= [[: _x:O [= _x:O [+ _x:O O]]] _v0:O] [= _v0:O [+ _v0:O O]]]] [link #4 #5 [= [= _v0:O [+ _v0:O O]] [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]]] [link #5 ^c [[: _x:O [= _x:O [+ _x:O O]]] _v0:O]] [node #6 [[= [+ _v0:O O] _v0:O]] [[= _v0:O [+ _v0:O O]]] [=-sym] []] [link #6 #5 [= _v0:O [+ _v0:O O]]] [node #7 [] [[= [+ _v0:O O] _v0:O]] [+-O] []] [link #7 #6 [= [+ _v0:O O] _v0:O]]]]]] [link #abc ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]"
      ]
    ],
    [
      "tautology",
      [
        2,
        "[node # [] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join folded] [[comment This tautology is proven automatically.] [node #0 [] [[-> _M [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [node #0 [_M] [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M _N] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [link ^a #0 _N] [node #0 [_M _N] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M _N _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #1 #2 [and _M [or _Q _N]]] [node #2 [[and _M [or _Q _N]]] [[-> _N [and _M [or _Q _N]]]] [veritas-aeterna] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [link ^a #1 _N] [node #1 [_M _N] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M _N [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _N] [node #0 [_N] [[or _Q _N]] [or-intro-2] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #1 #2 [and _M [or _Q _N]]] [node #2 [[and _M [or _Q _N]]] [[-> _N [and _M [or _Q _N]]]] [veritas-aeterna] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [node #1 [_M] [[-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [link ^a #0 [-> _N false]] [node #0 [_M [-> _N false]] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false] _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [link ^a #1 [-> _N false]] [node #1 [_M [-> _N false]] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false] [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _Q false]] [link ^a #0 [-> _N false]] [node #0 [[-> _Q false] [-> _N false]] [[-> [or _Q _N] false]] [or-negate] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link #0 #1 [-> [or _Q _N] false]] [node #1 [[-> [or _Q _N] false]] [[-> [and _M [or _Q _N]] false]] [and-negate-2] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _N [-> _N false]]] [tnd] []] [link #0 #3 [-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _N [-> _N false]]] [node #3 [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _N [-> _N false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #1 [] [[-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [node #0 [[-> _M false]] [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [link ^a #0 _N] [node #0 [[-> _M false] _N] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link ^a #2 _N] [link #1 #2 [-> [and _M [or _Q _N]] false]] [node #2 [_N [-> [and _M [or _Q _N]] false]] [[-> [-> _N [and _M [or _Q _N]]] false]] [impl-negate] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [link ^a #1 _N] [node #1 [[-> _M false] _N] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _N] [node #0 [_N] [[or _Q _N]] [or-intro-2] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link ^a #2 _N] [link #1 #2 [-> [and _M [or _Q _N]] false]] [node #2 [_N [-> [and _M [or _Q _N]] false]] [[-> [-> _N [and _M [or _Q _N]]] false]] [impl-negate] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [link ^a #0 [-> _N false]] [node #0 [[-> _M false] [-> _N false]] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false] _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [link ^a #1 [-> _N false]] [node #1 [[-> _M false] [-> _N false]] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false] [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _Q false]] [link ^a #0 [-> _N false]] [node #0 [[-> _Q false] [-> _N false]] [[-> [or _Q _N] false]] [or-negate] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _N [-> _N false]]] [tnd] []] [link #0 #3 [-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _N [-> _N false]]] [node #3 [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _N [-> _N false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _M [-> _M false]]] [tnd] []] [link #0 #3 [-> _M [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _M [-> _M false]]] [node #3 [[-> _M [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _M [-> _M false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]",
        "[node # [] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join folded] [[comment This tautology is proven automatically.] [node #0 [] [[-> _M [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [node #0 [_M] [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node ##test-me [_M _N] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [link ^a #0 _N] [node #0 [_M _N] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M _N _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #1 #2 [and _M [or _Q _N]]] [node #2 [[and _M [or _Q _N]]] [[-> _N [and _M [or _Q _N]]]] [veritas-aeterna] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [link ^a #1 _N] [node #1 [_M _N] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M _N [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _N] [node #0 [_N] [[or _Q _N]] [or-intro-2] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #1 #2 [and _M [or _Q _N]]] [node #2 [[and _M [or _Q _N]]] [[-> _N [and _M [or _Q _N]]]] [veritas-aeterna] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [node #1 [_M] [[-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _M] [link ^a #0 [-> _N false]] [node #0 [_M [-> _N false]] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false] _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #1 _M] [link #0 #1 [or _Q _N]] [node #1 [_M [or _Q _N]] [[and _M [or _Q _N]]] [and-intro] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 _M] [link ^a #1 [-> _N false]] [node #1 [_M [-> _N false]] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [_M [-> _N false] [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _Q false]] [link ^a #0 [-> _N false]] [node #0 [[-> _Q false] [-> _N false]] [[-> [or _Q _N] false]] [or-negate] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link #0 #1 [-> [or _Q _N] false]] [node #1 [[-> [or _Q _N] false]] [[-> [and _M [or _Q _N]] false]] [and-negate-2] []] [link #2 #3 [-> _N [and _M [or _Q _N]]]] [node #3 [[-> _N [and _M [or _Q _N]]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [veritas-aeterna] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _N [-> _N false]]] [tnd] []] [link #0 #3 [-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _N [-> _N false]]] [node #3 [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _N [-> _N false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #1 [] [[-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [node #0 [[-> _M false]] [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [link ^a #0 _N] [node #0 [[-> _M false] _N] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link ^a #2 _N] [link #1 #2 [-> [and _M [or _Q _N]] false]] [node #2 [_N [-> [and _M [or _Q _N]] false]] [[-> [-> _N [and _M [or _Q _N]]] false]] [impl-negate] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [link ^a #1 _N] [node #1 [[-> _M false] _N] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] _N [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _N] [node #0 [_N] [[or _Q _N]] [or-intro-2] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link ^a #2 _N] [link #1 #2 [-> [and _M [or _Q _N]] false]] [node #2 [_N [-> [and _M [or _Q _N]] false]] [[-> [-> _N [and _M [or _Q _N]]] false]] [impl-negate] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _M false]] [link ^a #0 [-> _N false]] [node #0 [[-> _M false] [-> _N false]] [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false] _Q] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 _Q] [node #0 [_Q] [[or _Q _N]] [or-intro-1] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [link ^a #1 [-> _M false]] [link ^a #1 [-> _N false]] [node #1 [[-> _M false] [-> _N false]] [[-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [impl-intro] [[node # [[-> _M false] [-> _N false] [-> _Q false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [join] [[link ^a #0 [-> _Q false]] [link ^a #0 [-> _N false]] [node #0 [[-> _Q false] [-> _N false]] [[-> [or _Q _N] false]] [or-negate] []] [link ^a #1 [-> _M false]] [node #1 [[-> _M false]] [[-> [and _M [or _Q _N]] false]] [and-negate-1] []] [link ^a #2 [-> _N false]] [node #2 [[-> _N false]] [[-> _N [and _M [or _Q _N]]]] [ex-falso] []] [link ^a #3 [-> _M false]] [node #3 [[-> _M false]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [ex-falso] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _Q [-> _Q false]]] [tnd] []] [link #0 #3 [-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _Q [-> _Q false]]] [node #3 [[-> _Q [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _Q false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _Q [-> _Q false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _N [-> _N false]]] [tnd] []] [link #0 #3 [-> _N [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _N [-> _N false]]] [node #3 [[-> _N [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _N false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _N [-> _N false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]]] [node #2 [] [[or _M [-> _M false]]] [tnd] []] [link #0 #3 [-> _M [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #1 #3 [-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]]] [link #2 #3 [or _M [-> _M false]]] [node #3 [[-> _M [-> _M [-> _N [and _M [or _Q _N]]]]] [-> [-> _M false] [-> _M [-> _N [and _M [or _Q _N]]]]] [or _M [-> _M false]]] [[-> _M [-> _N [and _M [or _Q _N]]]]] [or-elim] []] [link #3 ^c [-> _M [-> _N [and _M [or _Q _N]]]]]]]"
      ]
    ],
    [
      "tautology_2",
      [
        1,
        "[node #root [] [[-> [and [-> _X:P _Y:P] [-> _Y:P _Z:P]] [-> _X:P _Z:P]]] [join] [[comment This is a tautology, proven by hand.] [node #1 [] [[-> [and [-> _X:P _Y:P] [-> _Y:P _Z:P]] [-> _X:P _Z:P]]] [impl-intro] [[node #0 [[and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [[-> _X:P _Z:P]] [join] [[node #2 [[and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [[-> _X:P _Y:P] [-> _Y:P _Z:P]] [and-elim] []] [link ^a #2 [and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [node #4 [[and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [[-> _X:P _Z:P]] [impl-intro] [[node #3 [[and [-> _X:P _Y:P] [-> _Y:P _Z:P]] _X:P] [_Z:P] [join] [[node #5 [[and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [[-> _X:P _Y:P] [-> _Y:P _Z:P]] [and-elim] []] [link ^a #5 [and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [node #6 [_X:P [-> _X:P _Y:P]] [_Y:P] [mp] []] [link #5 #6 [-> _X:P _Y:P]] [node #7 [_Y:P [-> _Y:P _Z:P]] [_Z:P] [mp] []] [link #5 #7 [-> _Y:P _Z:P]] [link #7 ^c _Z:P] [link #6 #7 _Y:P] [link ^a #6 _X:P]]]]] [link ^a #4 [and [-> _X:P _Y:P] [-> _Y:P _Z:P]]] [link #4 ^c [-> _X:P _Z:P]]]]]] [link #1 ^c [-> [and [-> _X:P _Y:P] [-> _Y:P _Z:P]] [-> _X:P _Z:P]]]]]"
      ]
    ],
    [
      "space_0",
      [
        5,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[exists [: _x:O [= [S O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[exists [: _x:O [= [S O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [S O] _x:O]] [S O]]] [[exists [: _x:O [= [S O] _x:O]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= [S O] _x:O]]]]]]",
        "[node #root [] [[exists [: _x:O [= [S O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [S O] _x:O]] [S O]]] [[exists [: _x:O [= [S O] _x:O]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= [S O] _x:O]]]] [node #0.2336371168557242 [[= [S O] [S O]]] [[[: _x:O [= [S O] _x:O]] [S O]]] [beta-equiv] [] []] [link #0.2336371168557242 #0 [[: _x:O [= [S O] _x:O]] [S O]]]]]",
        "[node #root [] [[exists [: _x:O [= [S O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [S O] _x:O]] [S O]]] [[exists [: _x:O [= [S O] _x:O]]]] exists-intro []] [link #0 ^c [exists [: _x:O [= [S O] _x:O]]]] [node #0.2336371168557242 [[= [S O] [S O]]] [[[: _x:O [= [S O] _x:O]] [S O]]] [beta-equiv] [] []] [link #0.2336371168557242 #0 [[: _x:O [= [S O] _x:O]] [S O]]] [node #1 [] [[= [S O] [S O]]] =-intro []] [link #1 #0.2336371168557242 [= [S O] [S O]]]]]"
      ]
    ],
    [
      "space_1",
      [
        6,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.1620889817161386 [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [impl-intro] [[node #0 [[forall _p:<OP>]] [[_p:<OP> [S O]]] [join] []]]] [link #0.1620889817161386 ^c [-> [forall _p:<OP>] [_p:<OP> [S O]]]]]]",
        "[node #root [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.1620889817161386 [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [impl-intro] [[node #0 [[forall _p:<OP>]] [[_p:<OP> [S O]]] [join] [[node #1 [[forall _p:<OP>]] [[_p:<OP> [S O]]] forall-elim []] [link ^a #1 [forall _p:<OP>]]]]]] [link #0.1620889817161386 ^c [-> [forall _p:<OP>] [_p:<OP> [S O]]]]]]",
        "[node #root [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.1620889817161386 [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [impl-intro] [[node #0 [[forall _p:<OP>]] [[_p:<OP> [S O]]] [join] [[node #1 [[forall _p:<OP>]] [[_p:<OP> [S O]]] forall-elim []] [link ^a #1 [forall _p:<OP>]] [node #2 [[_p:<OP> [S O]]] [[_p:<OP> [S O]]] id []] [link #1 #2 [_p:<OP> [S O]]] [link #2 ^c [_p:<OP> [S O]]]]]]] [link #0.1620889817161386 ^c [-> [forall _p:<OP>] [_p:<OP> [S O]]]]]]",
        "[node #root [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #sub [] [[-> [forall _p:<OP>] [_p:<OP> [S O]]]] [impl-intro] [[node #0 [[forall _p:<OP>]] [[_p:<OP> [S O]]] [join] [[node #1 [[forall _p:<OP>]] [[_p:<OP> [S O]]] forall-elim []] [link ^a #1 [forall _p:<OP>]] [node #2 [[_p:<OP> [S O]]] [[_p:<OP> [S O]]] id []] [link #1 #2 [_p:<OP> [S O]]] [link #2 ^c [_p:<OP> [S O]]]]]]] [link #sub ^c [-> [forall _p:<OP>] [_p:<OP> [S O]]]]]]"
      ]
    ],
    [
      "space_2",
      [
        6,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.5889835331027985 [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #0 [] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [join] []]]] [link #0.5889835331027985 ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.5889835331027985 [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #0 [] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [join] [[node #0.40750769281603816 [[= _a:O [+ _a:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [beta-equiv] [] []] [link #0.40750769281603816 ^c [[: _x:O [= _x:O [+ _x:O O]]] _a:O]]]]]] [link #0.5889835331027985 ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.5889835331027985 [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #0 [] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [join] [[node #0.40750769281603816 [[= _a:O [+ _a:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [beta-equiv] [] []] [link #0.40750769281603816 ^c [[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [node #1 [[= [+ _a:O O] _a:O]] [[= _a:O [+ _a:O O]]] =-sym []] [link #1 #0.40750769281603816 [= _a:O [+ _a:O O]]]]]]] [link #0.5889835331027985 ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.5889835331027985 [] [[forall [: _x:O [= _x:O [+ _x:O O]]]]] [forall-intro] [[node #0 [] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [join] [[node #0.40750769281603816 [[= _a:O [+ _a:O O]]] [[[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [beta-equiv] [] []] [link #0.40750769281603816 ^c [[: _x:O [= _x:O [+ _x:O O]]] _a:O]] [node #1 [[= [+ _a:O O] _a:O]] [[= _a:O [+ _a:O O]]] =-sym []] [link #1 #0.40750769281603816 [= _a:O [+ _a:O O]]] [node #2 [] [[= [+ _a:O O] _a:O]] +-O []] [link #2 #1 [= [+ _a:O O] _a:O]]]]]] [link #0.5889835331027985 ^c [forall [: _x:O [= _x:O [+ _x:O O]]]]]]]"
      ]
    ],
    [
      "space_3",
      [
        2,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[= [+ [S O] [S O]] [S [S O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]"
      ]
    ],
    [
      "space_4",
      [
        7,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.24796990221574233 [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [exists-elim] [[node #0 [[_P:<OP> _x:O] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] []]]] [link ^a #0.24796990221574233 [exists _P:<OP>]] [link ^a #0.24796990221574233 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [link #0.24796990221574233 ^c _M:P]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.24796990221574233 [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [exists-elim] [[node #0 [[_P:<OP> _x:O] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[node #1 [[forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [[[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] forall-elim []] [link ^a #1 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]]]]]] [link ^a #0.24796990221574233 [exists _P:<OP>]] [link ^a #0.24796990221574233 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [link #0.24796990221574233 ^c _M:P]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.24796990221574233 [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [exists-elim] [[node #0 [[_P:<OP> _x:O] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[node #1 [[forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [[[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] forall-elim []] [link ^a #1 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [node #0.13366119109157337 [[[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] [[-> [_P:<OP> _x:O] _M:P]] [beta-equiv] [] []] [link #1 #0.13366119109157337 [[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]]]]]] [link ^a #0.24796990221574233 [exists _P:<OP>]] [link ^a #0.24796990221574233 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [link #0.24796990221574233 ^c _M:P]]]",
        "[node #root [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0.24796990221574233 [[exists _P:<OP>] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [exists-elim] [[node #0 [[_P:<OP> _x:O] [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [_M:P] [join] [[node #1 [[forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [[[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] forall-elim []] [link ^a #1 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [node #0.13366119109157337 [[[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] [[-> [_P:<OP> _x:O] _M:P]] [beta-equiv] [] []] [link #1 #0.13366119109157337 [[: _x:O [-> [_P:<OP> _x:O] _M:P]] _x:O]] [node #2 [[_P:<OP> _x:O] [-> [_P:<OP> _x:O] _M:P]] [_M:P] mp []] [link #0.13366119109157337 #2 [-> [_P:<OP> _x:O] _M:P]] [link ^a #2 [_P:<OP> _x:O]] [link #2 ^c _M:P]]]]] [link ^a #0.24796990221574233 [exists _P:<OP>]] [link ^a #0.24796990221574233 [forall [: _x:O [-> [_P:<OP> _x:O] _M:P]]]] [link #0.24796990221574233 ^c _M:P]]]"
      ]
    ],
    [
      "space_5",
      [
        11,
        "[node #root [] [] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #0.24249504910501152 [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] []]]] [link #0.24249504910501152 #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #0.24249504910501152 [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] [[node #0.37431920732696655 [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [beta-equiv] [] []] [link #0.37431920732696655 ^c [[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]]]]]] [link #0.24249504910501152 #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #0.24249504910501152 [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] [[node #0.37431920732696655 [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [beta-equiv] [] []] [link #0.37431920732696655 ^c [[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [node #0.43316912588286804 [] [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [impl-intro] [[node #0 [[= [+ O _x:O] _x:O]] [[= [+ O [S _x:O]] [S _x:O]]] [join] []]]] [link #0.43316912588286804 #0.37431920732696655 [-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]]]]]] [link #0.24249504910501152 #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #sub [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] [[node #0.37431920732696655 [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [beta-equiv] [] []] [link #0.37431920732696655 ^c [[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [node #0.43316912588286804 [] [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [impl-intro] [[node #0 [[= [+ O _x:O] _x:O]] [[= [+ O [S _x:O]] [S _x:O]]] [join] []]]] [link #0.43316912588286804 #0.37431920732696655 [-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]]]]]] [link #sub #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #sub [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] [[node #0.37431920732696655 [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [beta-equiv] [] []] [link #0.37431920732696655 ^c [[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [node #sub [] [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [impl-intro] [[node #0 [[= [+ O _x:O] _x:O]] [[= [+ O [S _x:O]] [S _x:O]]] [join] []]]] [link #sub #0.37431920732696655 [-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]]]]]] [link #sub #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]",
        "[node #root [] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] [join] [[comment This is an empty workspace. Add a goal to start proving, or choose a different workspace in the panel on the right.] [node #0 [[[: _x:O [= [+ O _x:O] _x:O]] O] [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [[forall [: _x:O [= [+ O _x:O] _x:O]]]] peano-2 []] [link #0 ^c [forall [: _x:O [= [+ O _x:O] _x:O]]]] [node #0.2231129704335848 [[= [+ O O] O]] [[[: _x:O [= [+ O _x:O] _x:O]] O]] [beta-equiv] [] []] [link #0.2231129704335848 #0 [[: _x:O [= [+ O _x:O] _x:O]] O]] [node #1 [] [[= [+ O O] O]] +-O []] [link #1 #0.2231129704335848 [= [+ O O] O]] [node #0.024720185297413377 [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [[forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [beta-equiv] [] []] [link #0.024720185297413377 #0 [forall [[: _p:<OP> [: _n:O [-> [_p:<OP> _n:O] [_p:<OP> [S _n:O]]]]] [: _x:O [= [+ O _x:O] _x:O]]]]] [node #sub [] [[forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]] [forall-intro] [[node #0 [] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [join] [[node #0.37431920732696655 [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [[[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [beta-equiv] [] []] [link #0.37431920732696655 ^c [[: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]] _x:O]] [node #sub [] [[-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]] [impl-intro] [[node #0 [[= [+ O _x:O] _x:O]] [[= [+ O [S _x:O]] [S _x:O]]] [join] [[node #1 [[= [S [+ O [S _x:O]]] [S [S _x:O]]]] [[= [+ O [S _x:O]] [S _x:O]]] peano-0 []] [link #1 ^c [= [+ O [S _x:O]] [S _x:O]]]]]]] [link #sub #0.37431920732696655 [-> [= [+ O _x:O] _x:O] [= [+ O [S _x:O]] [S _x:O]]]]]]]] [link #sub #0.024720185297413377 [forall [: _n:O [-> [= [+ O _n:O] _n:O] [= [+ O [S _n:O]] [S _n:O]]]]]]]]"
      ]
    ]
  ]
}
